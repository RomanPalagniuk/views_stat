services:
  redis:
    image: redis:8
    ports: ["6379:6379"]
    volumes: [redis-data:/data]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auto_stats
    ports: ["5432:5432"]
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./src/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:4
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: stats
      RABBITMQ_DEFAULT_PASS: securepass
    volumes: [rabbitmq-data:/var/lib/rabbitmq]
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    command: node src/server.js
    ports: ["3000:3000"]
    environment:
      - RABBITMQ_URL=amqp://stats:securepass@rabbitmq:5672
      - REDIS_URL=redis://redis:6379
      - PG_URL=postgres://postgres:postgres@postgres:5432/auto_stats
    depends_on:
      redis: { condition: service_healthy }
      postgres: { condition: service_healthy }

  event-worker:
    build: .
    command: node src/workers/event.worker.js
    environment:
      - RABBITMQ_URL=amqp://stats:securepass@rabbitmq:5672
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - rabbitmq

  sync-worker:
    build: .
    command: node src/workers/sync.worker.js
    environment:
      - REDIS_URL=redis://redis:6379
      - PG_URL=postgres://postgres:postgres@postgres:5432/auto_stats
      - SYNC_INTERVAL=*/2 * * * *
    depends_on:
      - redis
      - postgres
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

volumes:
  redis-data:
  postgres-data:
  rabbitmq-data: